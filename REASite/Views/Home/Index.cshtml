@model IQueryable<Apartment>
@using Microsoft.EntityFrameworkCore
@inject Microsoft.AspNetCore.Identity.UserManager<REASite.Areas.Identity.Data.SiteUser> _userManager
@inject REASite.Data.REASiteDbContext _context
@{
    string type = ViewBag.Type ?? "Rent";

    var user = User.Identity.IsAuthenticated ? await _userManager.GetUserAsync(User) : null;
    var favoriteIds = user != null
        ? await _context.Favorites
            .Where(f => f.UserId == user.Id)
            .Select(f => f.ApartmentId)
            .ToListAsync()
        : new List<int>();

    // Материализуем IQueryable в список
    var apartments = await Model.ToListAsync();
}

<div class="container mt-4">
        <form method="get" asp-controller="Home" asp-action="Index">
        @{await Html.RenderPartialAsync("partialSearchPropertyView");}
        </form>
        <ul class="nav nav-tabs mb-4">
            <li class="nav-item">
                <a class="nav-link @(type.ToLower() == "rent" ? "active" : "")" href="/rent">Аренда</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(type.ToLower() == "sale" ? "active" : "")" href="/sale">Продажа</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(type.ToLower() == "dailyrent" ? "active" : "")" href="/dailyrent">Посуточная аренда</a>
            </li>
        </ul>
        <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var apartment in apartments)
        {
            <div class="col-md-4 mb-4">
                <partial name="partialCardGridView" model="apartment" view-data="@(new ViewDataDictionary(ViewData) { { "IsFavorite", favoriteIds.Contains(apartment.Id) } })" />
            </div>
        }
        </div>
</div>

@Html.AntiForgeryToken()

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Подтверждение удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Вы уверены, что хотите удалить эту квартиру?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отменить</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Удалить</button>
            </div>
        </div>
    </div>
</div>

<style>
.card {
    cursor: pointer;
}

.card .carousel,
.card .btn {
    cursor: default;
}
</style>

@section Scripts {
    <script>var deleteUrl = '@Url.Action("Delete", "Home", null, "https")';</script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/deleteModal.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.card').forEach(card => {
                card.addEventListener('click', function(event) {
                    if (event.target.closest('.carousel') || event.target.closest('.btn')) {
                        return;
                    }
                    const url = this.getAttribute('data-detail-url');
                    if (url) {
                        window.location.href = url;
                    }
                });

                card.addEventListener('contextmenu', function(event) {
                    event.preventDefault();
                    const deleteUrl = this.getAttribute('data-delete-url');
                    if (deleteUrl) {
                        document.getElementById('deleteModal').setAttribute('data-delete-url', deleteUrl);
                        new bootstrap.Modal(document.getElementById('deleteModal')).show();
                    }
                });
            });
        });
    </script>
}